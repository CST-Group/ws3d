annotation.processing.enabled=true
annotation.processing.enabled.in.editor=false
annotation.processing.processors.list=
annotation.processing.run.all.processors=true
ant.customtasks.libs=JWSAntTasks
application.title=WorldServer3D
application.vendor=Ricardo R. Gudwin
build.classes.dir=${build.dir}/classes
build.classes.excludes=**/*.java,**/*.form
# This directory is removed when the project is cleaned:
build.dir=build
build.generated.dir=${build.dir}/generated
build.generated.sources.dir=${build.dir}/generated-sources
# Only compile against the classpath explicitly listed here:
build.sysclasspath=ignore
build.test.classes.dir=${build.dir}/test/classes
build.test.results.dir=${build.dir}/test/results
debug.classpath=\
    ${run.classpath}
debug.test.classpath=\
    ${run.test.classpath}
# This directory is removed when the project is cleaned:
dist.dir=dist
dist.jar=${dist.dir}/WorldServer3D.jar
dist.javadoc.dir=${dist.dir}/javadoc
endorsed.classpath=
excludes=
file.reference.jme2.jar=lib/jme2.jar
file.reference.json.jar=lib/json.jar
file.reference.lwjgl2.9.0.jar=lib/lwjgl2.9.0.jar
file.reference.NewWorldServer-src=src
includes=**
jar.archive.disabled=${jnlp.enabled}
jar.compress=false
jar.index=${jnlp.enabled}
javac.classpath=\
    ${file.reference.jme2.jar}:\
    ${file.reference.lwjgl2.9.0.jar}:\
    ${file.reference.json.jar}
# Space-separated list of extra javac options
javac.compilerargs=
javac.deprecation=false
javac.external.vm=false
javac.processorpath=\
    ${javac.classpath}
javac.source=1.8
javac.target=1.8
javac.test.classpath=\
    ${javac.classpath}:\
    ${build.classes.dir}
javadoc.additionalparam=
javadoc.author=false
javadoc.encoding=${source.encoding}
javadoc.noindex=false
javadoc.nonavbar=false
javadoc.notree=false
javadoc.private=false
javadoc.splitindex=true
javadoc.use=true
javadoc.version=false
javadoc.windowtitle=
<<<<<<< .mine
<<<<<<< .mine
jnlp.codebase.type=local
jnlp.codebase.url=file:/home/rgudwin/NetBeansProjects/WorldServer3D/dist/
jnlp.codebase.user=
jnlp.descriptor=application
jnlp.enabled=false
jnlp.offline-allowed=false
jnlp.signed=false
=======
>>>>>>> .r1752
=======
jnlp.codebase.type=user
jnlp.codebase.user=http://cst.fee.unicamp.br/sites/cst.fee.unicamp.br/files/ws3d/
jnlp.descriptor=application
jnlp.enabled=false
jnlp.mixed.code=default
jnlp.offline-allowed=true
jnlp.signed=true
jnlp.signing=key
jnlp.signing.alias=UNICAMP-Gudwin
jnlp.signing.keystore=/home/rgudwin/NetBeansProjects/WorldServer3D/key/keystore.key
main.class=worldserver3d.Main
# Substitui\u00e7\u00e3o opcional do atributo padr\u00e3o Application-Library-Allowable-Codebase que identifica os locais onde se espera que o RIA assinado seja encontrado.
manifest.custom.application.library.allowable.codebase=
# Substitui\u00e7\u00e3o opcional do atributo padr\u00e3o Caller-Allowable-Codebase que identifica os dom\u00ednios dos quais o c\u00f3digo JavaScript pode fazer chamadas para o RIA sem avisos de seguran\u00e7a.
manifest.custom.caller.allowable.codebase=
# Optional override of default Codebase manifest attribute, use to prevent RIAs from being repurposed
manifest.custom.codebase=
# Optional override of default Permissions manifest attribute (supported values: sandbox, all-permissions)
manifest.custom.permissions=
manifest.file=manifest.mf
meta.inf.dir=${src.dir}/META-INF
mkdist.disabled=false
platform.active=default_platform
run.classpath=\
    ${javac.classpath}:\
    ${build.classes.dir}
# Space-separated list of JVM arguments used when running the project
# (you may also define separate properties like run-sys-prop.name=value instead of -Dname=value
# or test-sys-prop.name=value to set system properties for unit tests):
run.jvmargs=-Djava.library.path=./lib
run.test.classpath=\
    ${javac.test.classpath}:\
    ${build.test.classes.dir}
source.encoding=ISO-8859-1
src.dir=${file.reference.NewWorldServer-src}
src.native.dir=lib/native
